export const responseFormat =
  '{\n  "output": [\n    {\n      "filepath": "src/config/database.js",\n      "content": "const mongoose = require(\'mongoose\');\\n\\nconst database = () => {\\n  mongoose.connect(\'mongodb://localhost/todo\', {\\n    useNewUrlParser: true, \\n    useUnifiedTopology: true,\\n    useFindAndModify: false,\\n    useCreateIndex: true\\n  });\\n};\\n\\nmodule.exports = database;"\n    },\n    {\n      "filepath": "src/config/dotenv.js",\n      "content": "require(\'dotenv\').config();"\n    },\n    {\n      "filepath": "src/models/user.model.js",\n      "content": "const mongoose = require(\'mongoose\');\\n\\nconst userSchema = new mongoose.Schema({\\n  name: {\\n    type: String,\\n    required: true\\n  },\\n  email: {\\n    type: String,\\n    required: true,\\n    unique: true\\n  },\\n  password: {\\n    type: String,\\n    required: true\\n  }\\n});\\n\\nconst User = mongoose.model(\'User\', userSchema);\\n\\nmodule.exports = User;"\n    },\n    {\n      "filepath": "src/models/product.model.js",\n      "content": "const mongoose = require(\'mongoose\');\\n\\nconst productSchema = new mongoose.Schema({\\n  name: {\\n    type: String,\\n    required: true\\n  },\\n  price: {\\n    type: Number,\\n    required: true\\n  },\\n  description: {\\n    type: String,\\n    required: true\\n  }\\n});\\n\\nconst Product = mongoose.model(\'Product\', productSchema);\\n\\nmodule.exports = Product;"\n    },\n    {\n      "filepath": "src/controllers/user.controller.js",\n      "content": "const User = require(\'../models/user.model\');\\n\\nconst createUser = async (req, res) => {\\n  try {\\n    const user = new User(req.body);\\n    await user.save();\\n    res.status(201).json({ message: \'User created successfully\' });\\n  } catch (error) {\\n    console.error(error);\\n    res.status(500).json({ error: \'An error occurred while creating the user\' });\\n  }\\n};\\n\\nconst findUser = async (req, res) => {\\n  try {\\n    const user = await User.findById(req.params.id);\\n    if (!user) {\\n      return res.status(404).json({ error: \'User not found\' });\\n    }\\n    res.json(user);\\n  } catch (error) {\\n    console.error(error);\\n    res.status(500).json({ error: \'An error occurred while finding the user\' });\\n  }\\n};\\n\\nmodule.exports = {\\n  createUser, \\n  findUser\\n};"\n    },\n    {\n      "filepath": "src/controllers/product.controller.js",\n      "content": "const Product = require(\'../models/product.model\');\\n\\nconst createProduct = async (req, res) => {\\n  try {\\n    const product = new Product(req.body);\\n    await product.save();\\n    res.status(201).json({ message: \'Product created successfully\' });\\n  } catch (error) {\\n    console.error(error);\\n    res.status(500).json({ error: \'An error occurred while creating the product\' });\\n  }\\n};\\n\\nconst findProduct = async (req, res) => {\\n  try {\\n    const product = await Product.findById(req.params.id);\\n    if (!product) {\\n      return res.status(404).json({ error: \'Product not found\' });\\n    }\\n    res.json(product);\\n  } catch (error) {\\n    console.error(error);\\n    res.status(500).json({ error: \'An error occurred while finding the product\' });\\n  }\\n};\\n\\nmodule.exports = {\\n  createProduct, \\n  findProduct\\n};"\n    },\n    {\n      "filepath": "src/routes/user.routes.js",\n      "content": "const express = require(\'express\');\\nconst userController = require(\'../controllers/user.controller\');\\n\\nconst router = express.Router();\\n\\nrouter.post(\'/\', userController.createUser);\\nrouter.get(\'/:id\', userController.findUser);\\n\\nmodule.exports = router;"\n    },\n    {\n      "filepath": "src/routes/product.routes.js",\n      "content": "const express = require(\'express\');\\nconst productController = require(\'../controllers/product.controller\');\\n\\nconst router = express.Router();\\n\\nrouter.post(\'/\', productController.createProduct);\\nrouter.get(\'/:id\', productController.findProduct);\\n\\nmodule.exports = router;"\n    },\n    {\n      "filepath": "src/services/user.service.js",\n      "content": "const User = require(\'../models/user.model\');\\n\\nconst createUser = async (userData) => {\\n  const user = new User(userData);\\n  return user.save();\\n};\\n\\nconst findUser = async (userId) => {\\n  return User.findById(userId);\\n};\\n\\nmodule.exports = {\\n  createUser, \\n  findUser\\n};"\n    },\n    {\n      "filepath": "src/services/email.service.js",\n      "content": "const sendEmail = async (emailData) => {\\n  // Add email sending logic here\\n};\\n\\nmodule.exports = {\\n  sendEmail\\n};"\n    },\n    {\n      "filepath": "src/middlewares/error.middleware.js",\n      "content": "const errorHandler = (err, req, res, next) => {\\n  console.error(err);\\n  res.status(500).json({ error: \'An error occurred\' });\\n};\\n\\nmodule.exports = errorHandler;"\n    },\n    {\n      "filepath": "src/app.js",\n      "content": "const express = require(\'express\');\\nconst userRoutes = require(\'./routes/user.routes\');\\nconst productRoutes = require(\'./routes/product.routes\');\\nconst errorMiddleware = require(\'./middlewares/error.middleware\');\\n\\nconst app = express();\\n\\napp.use(express.json());\\napp.use(\'/api/users\', userRoutes);\\napp.use(\'/api/products\', productRoutes);\\napp.use(errorMiddleware);\\n\\nmodule.exports = app;"\n    },\n    {\n      "filepath": ".env",\n      "content": "MONGO_URI=mongodb://localhost/todo\\nAPI_KEY=your_api_key"\n    }\n  ]\n}';
